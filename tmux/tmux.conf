# Thoughtbot tutorial
# :::::::::::::::::::
# Following this tutorial: https://thoughtbot.com/upcase/tmux
# Current episode: https://thoughtbot.com/upcase/videos/tmux-vim-integration

# Notes
# ::::::::
# - A session can have multiple windows. And a window can have multiple panes
# - Move to last visited window is is: `C-s l`
# - Move to last visited session is is: `C-s L` (I don't use multiple sessions for now)
# - Zoom mode: Only one pane visible: `C-s z` and back to all panes visible the same: `C-s z`
# - On iTerm I have remapped `Caps lock` to Ctrl. So is the same
# - To resize Up/Down/Left/Right current pane to Shift `S-Left`, `S-Right`,.... Helpful to give more space

unbind C-b
set -g prefix C-s

# Update tmux config
# ::::::::::::::::::
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

# Pane navigation
# :::::::::::::::
# Use Alt-vim keys without prefix key to switch panes
# To make this work on Mac OS X iTerm you have to:
# Go to: Profiles/Keys/Left option acts as +Esc
bind -n M-h select-pane -L
bind -n M-j select-pane -D
bind -n M-k select-pane -U
bind -n M-l select-pane -R

# Panes
# :::::::::::
bind - split-window -v -c '#{pane_current_path}'
bind \\ split-window -h -c '#{pane_current_path}'
bind x kill-pane # Do not ask for confirmation when closing a pane

# Fine adjustment (1 or 2 cursor cells per bump)
bind -n S-Left resize-pane -L 10
bind -n S-Right resize-pane -R 10
bind -n S-Down resize-pane -D 5
bind -n S-Up resize-pane -U 5

# Windows
bind c new-window -c '#{pane_current_path}'
bind-key & kill-window # Do not ask for confirmation when closing a window
set-option -g base-index 1
set-option -g renumber-windows on
bind C-s choose-tree

# Copy from tmux to Mac OS X clipboard
# ::::::::::::::::::::::::::::::::
# How it works?
# - On a tmux terminal do: `C-[` to put tmux on scroll mode
# - Navigate up/down the text in terminal
# - Whe you are in the text use Vim visual mode by presing `v` and select text.
# - The press `y` to copy the text to Mac OS X clipboard
# - After that you can use elsewhere
# Use vim keybindings in copy mode
setw -g mode-keys vi
# brew install reattach-to-user-namespace (needed on Mac OS X)
# Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi 'v' send-keys -X begin-selection
bind-key -T copy-mode-vi 'y' send-keys -X copy-pipe-and-cancel 'reattach-to-user-namespace pbcopy'
# Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# Cosmetics (colors and status bar)
 #:::::::::::::::::::::::::::::::::
set-option -g default-terminal "screen-256color"
set-option -g status-bg '#2EC21A'
set-option -g status-fg '#000000'
# More space for tmux session name. The `[something]` part
set-option -g status-left-length 50
set-option -g status-right "Pane: #P - #(battery -t)  #(date '+%a, %b %d - %I:%M') "
